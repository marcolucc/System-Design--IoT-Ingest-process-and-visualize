version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

x-restart-policy: &default-restart
  restart: unless-stopped

x-default-postgres: &postgres-common
  image: postgres:14-alpine
  logging: *default-logging
  restart: unless-stopped
  environment: &postgres-common-env
    POSTGRES_USER: ${POSTGRES_USER:-postgres}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}

networks:
  kong-net:
    driver: bridge
  keycloak-net:
    driver: bridge

volumes:
  kong-datastore:
  keycloak-datastore:
  timescaledb_data:
  local_pgdata:
  pgadmin-data:
  prometheus_data:
  grafana_data:

services:
  #############################################################################
  # API Gateway & Authentication
  #############################################################################
  kong-db:
    <<: *postgres-common
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "${KONG_DB_PORT:-15432}:5432"
    environment:
      <<: *postgres-common-env
      POSTGRES_DB: ${KONG_DB_NAME:-api-gw}
      POSTGRES_USER: ${KONG_DB_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_DB_PASSWORD:-kong}

  kong:
    build:
      context: ./
      dockerfile: ./kong/Dockerfile
    image: kong-oidc:latest
    <<: *default-restart
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "${KONG_HTTP_PORT:-8000}:8000"
      - "${KONG_ADMIN_PORT:-8001}:8001"
      - "${KONG_HTTPS_PORT:-8443}:8443"
      - "${KONG_ADMIN_SSL_PORT:-8444}:8444"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: ${KONG_DB_NAME:-api-gw}
      KONG_PG_USER: ${KONG_DB_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_DB_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_PLUGINS: bundled,oidc
      KONG_LOG_LEVEL: ${KONG_LOG_LEVEL:-notice}

  konga:
    image: pantsel/konga:latest
    <<: *default-restart
    depends_on:
      - kong
    networks:
      - kong-net
    ports:
      - "${KONGA_PORT:-1337}:1337"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: 5432
      DB_USER: ${KONG_DB_USER:-kong}
      DB_PASSWORD: ${KONG_DB_PASSWORD:-kong}
      DB_DATABASE: ${KONG_DB_NAME:-api-gw}
      NODE_ENV: ${NODE_ENV:-production}

  #############################################################################
  # Identity Management
  #############################################################################
  keycloak-db:
    <<: *postgres-common
    volumes:
      - keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "${KEYCLOAK_DB_PORT:-25432}:5432"
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME:-keycloak}
      POSTGRES_USER: ${KEYCLOAK_DB_USER:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-password}

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.4
    <<: *default-restart
    container_name: keycloak
    depends_on:
      - keycloak-db
    command: start-dev
    volumes:
      - ./custom-theme/:/opt/keycloak/themes/custom-theme/
    networks:
      - keycloak-net
    ports:
      - "${KEYCLOAK_PORT:-8180}:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/${KEYCLOAK_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-password}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_METRICS_ENABLED: "true"

  #############################################################################
  # Monitoring & Metrics
  #############################################################################
  prometheus:
    image: prom/prometheus:latest
    <<: *default-restart
    container_name: prometheus
    depends_on:
      - kong
    networks:
      - kong-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"

  grafana:
    image: grafana/grafana:latest
    <<: *default-restart
    container_name: grafana
    depends_on:
      - prometheus
    networks:
      - kong-net
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: "false"

  #############################################################################
  # Message Queue & Event Processing
  #############################################################################
  rabbitmq:
    image: rabbitmq:3.8.9-management
    <<: *default-restart
    container_name: rabbitmq
    networks:
      - kong-net
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia
      - ./rabbitmq/logs:/var/log/rabbitmq

  #############################################################################
  # Serverless Functions
  #############################################################################
  nuclio:
    image: quay.io/nuclio/dashboard:stable-amd64
    <<: *default-restart
    container_name: nuclio-dashboard
    networks:
      - kong-net
    ports:
      - "${NUCLIO_PORT:-8070}:8070"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  #############################################################################
  # Databases & Storage
  #############################################################################
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    <<: *default-restart
    container_name: timescale
    networks:
      - kong-net
    ports:
      - "${TIMESCALEDB_PORT:-5430}:5432"
    environment:
      POSTGRES_USER: ${TIMESCALEDB_USER:-timescaledb}
      POSTGRES_PASSWORD: ${TIMESCALEDB_PASSWORD:-password}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data

  postgres:
    <<: *postgres-common
    container_name: local_pgdb
    networks:
      - kong-net
    ports:
      - "${POSTGRES_PORT:-35432}:5432"
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    <<: *default-restart
    container_name: pgadmin4_container
    networks:
      - kong-net
    ports:
      - "${PGADMIN_PORT:-8888}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-user@domain-name.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-password}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  #############################################################################
  # Application Services (Commented out for development)
  #############################################################################
  # backend:
  #   build: ./backend
  #   container_name: backend
  #   <<: *default-restart
  #   ports:
  #     - "${BACKEND_PORT:-9999}:9999"
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: ./backend/app
  #   networks:
  #     - kong-net

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./webapp
  #   <<: *default-restart
  #   ports:
  #     - "${FRONTEND_PORT:-80}:4200"
  #   networks:
  #     - kong-net